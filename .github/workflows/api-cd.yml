name: api-cd 

on:
  push:
    branches:
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    defaults:
      run:
        working-directory: apps/api

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push API to Docker Hub 
        run: |
          docker build . -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
      
      - name: Deploy on EC2 Instance
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}

        run: |
          echo "$SSH_PRIVATE_KEY" > personal-website-api-keypair.pem
          chmod 400 personal-website-api-keypair.pem
          ssh -o StrictHostKeyChecking=no -i personal-website-api-keypair.pem ${SSH_USER}@${SSH_HOST} '
            sudo docker stop personal-website-api || true
            sudo docker rm personal-website-api || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
            sudo docker run --name personal-website-api -d -p 8080:8080 \
              -e SPRING_DATASOURCE_URL=${{ secrets.API_SPRING_DATASOURCE_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.API_SPRING_DATASOURCE_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.API_SPRING_DATASOURCE_PASSWORD }} \
              -e SPRING_JPA_HIBERNATE_DDL_AUTO=${{ secrets.API_SPRING_JPA_HIBERNATE_DDL_AUTO }} \
              -e AUTH_WHITELISTED_EMAILS=${{ secrets.API_AUTH_WHITELISTED_EMAILS }} \
              -e AWS_ACCESS_KEY=${{ secrets.API_AWS_ACCESS_KEY }} \
              -e AWS_SECRET_KEY=${{ secrets.API_AWS_SECRET_KEY }} \
              -e AWS_S3_BUCKETS_BLOG=${{ secrets.API_AWS_S3_BUCKETS_BLOG }} \
              -e SECURITY_JWT_SECRET_KEY=${{ secrets.API_SECURITY_JWT_SECRET_KEY }} \
              -e SECURITY_CORS_ALLOWED_ORIGINS=${{ secrets.API_SECURITY_CORS_ALLOWED_ORIGINS }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
            '
